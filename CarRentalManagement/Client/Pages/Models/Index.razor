@page "/models/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]

<h3 class="card-title">Car Models</h3>
<hr />
<br />

@if (Models == null)
{
	<div class="alert alert-info">Loading Models...</div>
}
else
{
	<table class="table table-responsive">
		<thead>
			<tr>
				<th>Name</th>
				<th>Actions</th>
			</tr>
		</thead>
	</table>
	<tbody>
		@foreach (var Model in Models)
		{
			<tr>
				<td>@Model.Name</td>
				<td>
					<a href="/Models/view/@Model.Id" class="btn btn-warning">
						<span class="oi oi-pencil"></span>
					</a>
					<button class="btn btn-danger" @onclick="@(()=>Delete(Model.Id))">
						<span class="oi oi-delete"></span>
					</button>
				</td>
			</tr>
		}
	</tbody>
}

@code {
	private List<Model> Models;
	protected async override Task OnInitializedAsync()
	{
		Models = await _client.GetFromJsonAsync<List<Model>>(Endpoints.ModelsEndpoint);
	}

	async Task Delete(int ModelId)
	{
		var Model = Models.First(q => q.Id == ModelId);
		var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {Model.Name}?");
		if (confirm)
		{
			await _client.DeleteAsync($"{Endpoints.VehiclesEndpoint}/{ModelId}");
			await OnInitializedAsync();
		}

	}

}
