@inject HttpClient _client

<EditForm Model="@vehicle" OnInvalidSubmit=@OnValidSubmit>
	<DataAnnotationsValidator />
	<ValidationSummary />
	<div class="form-group">
		<label>Make: </label>
		<div>
			<select @bind="vehicle.MakeID" class="form-control">
				<option value="">-- Select Make --</option>
				@if (Makes != null)
				{
					foreach (var make in Makes)
					{
						<option value="@make.Id">@make.Name</option>
					}
				}
			</select>
			<ValidationMessage For="@(() => vehicle.MakeID)" />
		</div>
	</div>
	<div class="form-group">
		<label>Model: </label>
		<div>
			<InputSelect @bind-Value="vehicle.ModelID" class="form-control">
				<option value="">-- Select Model --</option>
				@if (Models != null)
				{
					foreach (var model in Models)
					{
						<option value="@model.Id">@model.Name</option>
					}
				}
			</InputSelect>
			<ValidationMessage For="@(() => vehicle.ModelID)" />
		</div>
	</div>
	<div class="form-group">
		<label>Colour: </label>
		<div>
			<select @bind="vehicle.ColourID" class="form-control">
				<option value="">-- Select Colour --</option>
				@if (Colours != null)
				{
					foreach (var colour in Colours)
					{
						<option value="@colour.Id">@colour.Name</option>
					}
				}
			</select>
			<ValidationMessage For="@(() => vehicle.ColourID)" />
		</div>
	</div>
	<div class="form-group">
		<label>Year:</label>
		<div>
			<InputNumber @bind-Value="@vehicle.Year" class="form-control" />
			<ValidationMessage For="@(() => vehicle.Year)" />
		</div>
	</div>
	<div class="form-group">
		<label>License Plate Number:</label>
		<div>
			<InputText @bind-Value="@vehicle.LicensePlateNumber" class="form-control" />
			<ValidationMessage For="@(() => vehicle.LicensePlateNumber)" />
		</div>
	</div>
	<div class="form-group">
		<label>Vehicle Identification Number:</label>
		<div>
			<InputText @bind-Value="@vehicle.Vin" class="form-control" />
			<ValidationMessage For="@(() => vehicle.Vin)" />
		</div>
	</div>
	<div class="form-group">
		<label>Daily Rate:</label>
		<div>
			<InputNumber @bind-Value="@vehicle.RentalRate" />
			<ValidationMessage For="@(() => vehicle.RentalRate)" />
		</div>
	</div>
	<button type="submit" class="btn btn-success btn-block">
		@ButtonText
	</button>
	<BackToList Target="vehicles"/>
</EditForm>
@code {
	private IList<Make> Makes;
	private IList<Model> Models;
	private IList<Colour> Colours;
	protected async override Task OnInitializedAsync()
	{
		Makes = await _client.GetFromJsonAsync<List<Make>>($"{Endpoints.MakesEndpoint}");
		Models = await _client.GetFromJsonAsync<List<Model>>($"{Endpoints.ModelsEndpoint}");
		Colours = await _client.GetFromJsonAsync<List<Colour>>($"{Endpoints.ColoursEndpoint}");
	}

	[Parameter] public Vehicle vehicle { get; set; }
	[Parameter] public string ButtonText { get; set; } = "Save";
	[Parameter] public EventCallback OnValidSubmit { get; set; }
}
